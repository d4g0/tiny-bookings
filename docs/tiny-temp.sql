-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.hotel
(
    id serial,
    name text NOT NULL,
    maximun_free_calendar_days integer NOT NULL,
    check_in_hour_time timestamp without time zone NOT NULL,
    check_out_hour_time timestamp without time zone NOT NULL,
    minimal_prev_days_to_cancel integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.admins
(
    id serial,
    user_role integer NOT NULL,
    name character varying(40) NOT NULL,
    description character varying(150),
    hash_pasword text NOT NULL,
    reset_token text,
    created_at timestamp without time zone DEFAULT now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.clients
(
    id serial,
    user_role integer,
    name character varying(60) NOT NULL,
    last_name character varying(60) NOT NULL,
    hash_password text,
    reset_token text,
    created_at timestamp without time zone DEFAULT now(),
    email character varying(100)
);

CREATE TABLE IF NOT EXISTS public.user_roles
(
    id serial,
    role character varying(10) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.room_amenity
(
    id serial,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rooms_amenities
(
    id serial,
    amenity_id integer NOT NULL,
    room_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.room
(
    id serial,
    hotel_id integer NOT NULL,
    name character varying(40) NOT NULL,
    night_price numeric NOT NULL,
    capacity integer NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    beds integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.booking_state
(
    id serial,
    state character varying(60) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.booking
(
    id serial,
    client_id integer NOT NULL,
    state integer NOT NULL,
    created_at timestamp without time zone DEFAULT now(),
    bill integer NOT NULL,
    check_in_date timestamp without time zone NOT NULL,
    check_out_date timestamp without time zone NOT NULL,
    number_of_guests integer NOT NULL,
    paymet_type integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment_type
(
    id serial,
    type character varying(60) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.rooms_bookings
(
    id serial,
    booking_id integer,
    room_id integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.room_pictures
(
    id serial,
    filename text NOT NULL,
    room_id integer,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.admins
    ADD CONSTRAINT user_role FOREIGN KEY (user_role)
    REFERENCES public.user_roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.clients
    ADD CONSTRAINT user_role FOREIGN KEY (user_role)
    REFERENCES public.user_roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rooms_amenities
    ADD CONSTRAINT amenity_link FOREIGN KEY (amenity_id)
    REFERENCES public.room_amenity (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rooms_amenities
    ADD CONSTRAINT room_link FOREIGN KEY (room_id)
    REFERENCES public.room (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.room
    ADD CONSTRAINT "hotel-link" FOREIGN KEY (hotel_id)
    REFERENCES public.hotel (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.booking
    ADD CONSTRAINT payment_type FOREIGN KEY (paymet_type)
    REFERENCES public.payment_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rooms_bookings
    ADD CONSTRAINT booking_id FOREIGN KEY (booking_id)
    REFERENCES public.booking (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.rooms_bookings
    ADD CONSTRAINT room_id FOREIGN KEY (room_id)
    REFERENCES public.room (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.room_pictures
    ADD CONSTRAINT room_id FOREIGN KEY (room_id)
    REFERENCES public.room (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;